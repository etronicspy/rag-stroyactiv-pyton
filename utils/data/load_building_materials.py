#!/usr/bin/env python3
import asyncio
from .load_materials import MaterialsLoader

async def load_materials():
    """–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    loader = MaterialsLoader()
    
    print('üîç –ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API...')
    if not await loader.check_api_status():
        print('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω! –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000')
        return
    
    print('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω')
    print('üì• –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏–∑ tests/data/building_materials.json...')
    
    result = await loader.load_from_json_file(
        'tests/data/building_materials.json', 
        batch_size=50
    )
    
    if result.get('success', False):
        print('üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
    else:
        print('‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏')
    
    return result

if __name__ == "__main__":
    asyncio.run(load_materials()) 