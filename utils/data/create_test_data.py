#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
"""
import requests
import json
from typing import List, Dict

BASE_URL = "http://localhost:8000/api/v1"

def create_categories() -> List[str]:
    """–°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    categories = [
        {"name": "–¶–µ–º–µ–Ω—Ç", "description": "–í—è–∂—É—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ü–µ–º–µ–Ω—Ç–∞"},
        {"name": "–ë–µ—Ç–æ–Ω", "description": "–ì–æ—Ç–æ–≤—ã–µ –±–µ—Ç–æ–Ω–Ω—ã–µ —Å–º–µ—Å–∏"},
        {"name": "–ö–∏—Ä–ø–∏—á", "description": "–ö–∏—Ä–ø–∏—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è"},
        {"name": "–ú–µ—Ç–∞–ª–ª", "description": "–ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –∞—Ä–º–∞—Ç—É—Ä–∞"},
        {"name": "–ü–µ—Å–æ–∫", "description": "–ü–µ—Å—á–∞–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"},
        {"name": "–©–µ–±–µ–Ω—å", "description": "–©–µ–±–µ–Ω–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"},
        {"name": "–ò–∑–æ–ª—è—Ü–∏—è", "description": "–ò–∑–æ–ª—è—Ü–∏–æ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"},
    ]
    
    created_categories = []
    print("üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
    
    for category in categories:
        try:
            response = requests.post(f"{BASE_URL}/reference/categories/", json=category)
            if response.status_code == 200:
                created_categories.append(category["name"])
                print(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è '{category['name']}' —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category['name']}': {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return created_categories

def create_units() -> List[str]:
    """–°–æ–∑–¥–∞–µ–º –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è"""
    units = [
        {"name": "–∫–≥", "description": "–ö–∏–ª–æ–≥—Ä–∞–º–º"},
        {"name": "—Ç", "description": "–¢–æ–Ω–Ω–∞"},
        {"name": "–º¬≥", "description": "–ö—É–±–∏—á–µ—Å–∫–∏–π –º–µ—Ç—Ä"},
        {"name": "–º¬≤", "description": "–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –º–µ—Ç—Ä"},
        {"name": "–º", "description": "–ú–µ—Ç—Ä"},
        {"name": "—à—Ç", "description": "–®—Ç—É–∫–∞"},
        {"name": "—É–ø–∞–∫", "description": "–£–ø–∞–∫–æ–≤–∫–∞"},
        {"name": "–ª", "description": "–õ–∏—Ç—Ä"},
    ]
    
    created_units = []
    print("\nüìè –°–æ–∑–¥–∞–Ω–∏–µ –µ–¥–∏–Ω–∏—Ü –∏–∑–º–µ—Ä–µ–Ω–∏—è...")
    
    for unit in units:
        try:
            response = requests.post(f"{BASE_URL}/reference/units/", json=unit)
            if response.status_code == 200:
                created_units.append(unit["name"])
                print(f"‚úÖ –ï–¥–∏–Ω–∏—Ü–∞ '{unit['name']}' —Å–æ–∑–¥–∞–Ω–∞")
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –µ–¥–∏–Ω–∏—Ü—ã '{unit['name']}': {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return created_units

def create_materials(categories: List[str], units: List[str]) -> List[Dict]:
    """–°–æ–∑–¥–∞–µ–º 10 –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"""
    materials = [
        {"name": "–ü–æ—Ä—Ç–ª–∞–Ω–¥—Ü–µ–º–µ–Ω—Ç –ú400", "category": "–¶–µ–º–µ–Ω—Ç", "unit": "–∫–≥", 
         "description": "–í—ã—Å–æ–∫–æ–ø—Ä–æ—á–Ω—ã–π –ø–æ—Ä—Ç–ª–∞–Ω–¥—Ü–µ–º–µ–Ω—Ç –º–∞—Ä–∫–∏ –ú400 –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç"},
        {"name": "–ë–µ—Ç–æ–Ω –ú300 –í22.5", "category": "–ë–µ—Ç–æ–Ω", "unit": "–º¬≥", 
         "description": "–¢–æ–≤–∞—Ä–Ω—ã–π –±–µ—Ç–æ–Ω –º–∞—Ä–∫–∏ –ú300 –∫–ª–∞—Å—Å–∞ –í22.5 –¥–ª—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–æ–≤"},
        {"name": "–ö–∏—Ä–ø–∏—á –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∏–π –ø–æ–ª–Ω–æ—Ç–µ–ª—ã–π", "category": "–ö–∏—Ä–ø–∏—á", "unit": "—à—Ç", 
         "description": "–ö—Ä–∞—Å–Ω—ã–π –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∏–π –∫–∏—Ä–ø–∏—á –ø–æ–ª–Ω–æ—Ç–µ–ª—ã–π –ú150"},
        {"name": "–ê—Ä–º–∞—Ç—É—Ä–∞ –ê500–° d12", "category": "–ú–µ—Ç–∞–ª–ª", "unit": "–º", 
         "description": "–°—Ç–∞–ª—å–Ω–∞—è –∞—Ä–º–∞—Ç—É—Ä–∞ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –¥–∏–∞–º–µ—Ç—Ä–æ–º 12–º–º"},
        {"name": "–ü–µ—Å–æ–∫ —Ä–µ—á–Ω–æ–π –∫—Ä—É–ø–Ω—ã–π", "category": "–ü–µ—Å–æ–∫", "unit": "—Ç", 
         "description": "–†–µ—á–Ω–æ–π –ø–µ—Å–æ–∫ –∫—Ä—É–ø–Ω–æ–π —Ñ—Ä–∞–∫—Ü–∏–∏ –¥–ª—è –±–µ—Ç–æ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç"},
        {"name": "–©–µ–±–µ–Ω—å –≥—Ä–∞–Ω–∏—Ç–Ω—ã–π 5-20", "category": "–©–µ–±–µ–Ω—å", "unit": "—Ç", 
         "description": "–ì—Ä–∞–Ω–∏—Ç–Ω—ã–π —â–µ–±–µ–Ω—å —Ñ—Ä–∞–∫—Ü–∏–∏ 5-20–º–º –¥–ª—è –±–µ—Ç–æ–Ω–∞"},
        {"name": "–¶–µ–º–µ–Ω—Ç –±–µ–ª—ã–π –ú500", "category": "–¶–µ–º–µ–Ω—Ç", "unit": "–∫–≥", 
         "description": "–ë–µ–ª—ã–π –ø–æ—Ä—Ç–ª–∞–Ω–¥—Ü–µ–º–µ–Ω—Ç –ú500 –¥–ª—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ä–∞–±–æ—Ç"},
        {"name": "–ü–µ–Ω–æ–ø–æ–ª–∏—Å—Ç–∏—Ä–æ–ª 100–º–º", "category": "–ò–∑–æ–ª—è—Ü–∏—è", "unit": "–º¬≤", 
         "description": "–ü–µ–Ω–æ–ø–æ–ª–∏—Å—Ç–∏—Ä–æ–ª—å–Ω—ã–µ –ø–ª–∏—Ç—ã —Ç–æ–ª—â–∏–Ω–æ–π 100–º–º –¥–ª—è —É—Ç–µ–ø–ª–µ–Ω–∏—è"},
        {"name": "–ë–µ—Ç–æ–Ω —Å–∞–º–æ—É–ø–ª–æ—Ç–Ω—è—é—â–∏–π—Å—è", "category": "–ë–µ—Ç–æ–Ω", "unit": "–º¬≥", 
         "description": "–í—ã—Å–æ–∫–æ—Ç–µ–∫—É—á–∏–π —Å–∞–º–æ—É–ø–ª–æ—Ç–Ω—è—é—â–∏–π—Å—è –±–µ—Ç–æ–Ω –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–π"},
        {"name": "–¶–µ–º–µ–Ω—Ç–Ω–æ-–ø–µ—Å—á–∞–Ω–∞—è —Å–º–µ—Å—å", "category": "–¶–µ–º–µ–Ω—Ç", "unit": "–∫–≥", 
         "description": "–ì–æ—Ç–æ–≤–∞—è —Å—É—Ö–∞—è —Ü–µ–º–µ–Ω—Ç–Ω–æ-–ø–µ—Å—á–∞–Ω–∞—è —Å–º–µ—Å—å –¥–ª—è —à—Ç—É–∫–∞—Ç—É—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç"},
    ]
    
    created_materials = []
    print("\nüß± –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤...")
    
    for i, material in enumerate(materials, 1):
        try:
            response = requests.post(f"{BASE_URL}/materials/", json=material)
            if response.status_code == 200:
                result = response.json()
                created_materials.append(result)
                print(f"‚úÖ {i}. –ú–∞—Ç–µ—Ä–∏–∞–ª '{material['name']}' —Å–æ–∑–¥–∞–Ω (ID: {result.get('id', 'N/A')})")
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ '{material['name']}': {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    return created_materials

def test_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞...")
    
    search_queries = ["—Ü–µ–º–µ–Ω—Ç", "–±–µ—Ç–æ–Ω", "–∫–∏—Ä–ø–∏—á", "–∞—Ä–º–∞—Ç—É—Ä–∞"]
    
    for query in search_queries:
        try:
            response = requests.get(f"{BASE_URL}/search/?q={query}&limit=3")
            if response.status_code == 200:
                results = response.json()
                print(f"üîç –ü–æ–∏—Å–∫ '{query}': –Ω–∞–π–¥–µ–Ω–æ {len(results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
                for result in results[:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2
                    print(f"   - {result.get('name', 'N/A')}")
            else:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ '{query}': {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ú–ê–°–°–û–í–û–ï –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    try:
        response = requests.get(f"{BASE_URL}/health/")
        if response.status_code != 200:
            print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ localhost:8000")
            return
        print("‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω")
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ API: {e}")
        return
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    categories = create_categories()
    units = create_units()
    materials = create_materials(categories, units)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
    test_search()
    
    print("\n" + "=" * 50)
    print("‚úÖ –°–û–ó–î–ê–ù–ò–ï –î–ê–ù–ù–´–• –ó–ê–í–ï–†–®–ï–ù–û")
    print(f"üìä –°–æ–∑–¥–∞–Ω–æ: {len(categories)} –∫–∞—Ç–µ–≥–æ—Ä–∏–π, {len(units)} –µ–¥–∏–Ω–∏—Ü, {len(materials)} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
    print("\nüåê –î–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å–∞–º:")
    print("   - –ú–∞—Ç–µ—Ä–∏–∞–ª—ã: http://localhost:8000/api/v1/materials/")
    print("   - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: http://localhost:8000/api/v1/reference/categories/")
    print("   - –ï–¥–∏–Ω–∏—Ü—ã: http://localhost:8000/api/v1/reference/units/")
    print("   - –ü–æ–∏—Å–∫: http://localhost:8000/api/v1/search/?q=—Ü–µ–º–µ–Ω—Ç")

if __name__ == "__main__":
    main() 