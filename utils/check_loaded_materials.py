#!/usr/bin/env python3
import requests
import json

def check_materials():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"""
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–µ 10 –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        response = requests.get("http://localhost:8000/api/v1/materials/?limit=10")
        materials = response.json()
        
        print("=" * 60)
        print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ó–ê–ì–†–£–ó–ö–ò –°–¢–†–û–ò–¢–ï–õ–¨–ù–´–• –ú–ê–¢–ï–†–ò–ê–õ–û–í")
        print("=" * 60)
        print(f"üìä –í—Å–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {len(materials)}+ (–ø–æ–∫–∞–∑–∞–Ω–æ 10)")
        print()
        
        # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = {}
        for material in materials:
            cat = material['use_category']
            if cat not in categories:
                categories[cat] = 0
            categories[cat] += 1
        
        print("üè∑Ô∏è –ö–ê–¢–ï–ì–û–†–ò–ò –ú–ê–¢–ï–†–ò–ê–õ–û–í:")
        for category, count in categories.items():
            print(f"   ‚Ä¢ {category}: {count} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
        
        print()
        print("üì¶ –ü–†–ò–ú–ï–†–´ –ó–ê–ì–†–£–ñ–ï–ù–ù–´–• –ú–ê–¢–ï–†–ò–ê–õ–û–í:")
        for i, material in enumerate(materials[:5], 1):
            print(f"{i:2}. {material['name']}")
            print(f"    ‚îî‚îÄ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {material['use_category']}")
            print(f"    ‚îî‚îÄ –ï–¥–∏–Ω–∏—Ü–∞: {material['unit']}")
            print(f"    ‚îî‚îÄ –ê—Ä—Ç–∏–∫—É–ª: {material['article']}")
            print()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª—ã —Å —Ä–∞–∑–Ω—ã–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        print("üîç –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ö–ê–¢–ï–ì–û–†–ò–ó–ê–¶–ò–Ø:")
        examples = {
            "–¶–µ–º–µ–Ω—Ç": [m for m in materials if "—Ü–µ–º–µ–Ω—Ç" in m['name'].lower()],
            "–ê—Ä–º–∞—Ç—É—Ä–∞": [m for m in materials if "–∞—Ä–º–∞—Ç—É—Ä–∞" in m['name'].lower()],  
            "–ö—Ä–æ–≤–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã": [m for m in materials if m['use_category'] == "–ö—Ä–æ–≤–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"]
        }
        
        for cat_name, items in examples.items():
            if items:
                print(f"   ‚úÖ {cat_name}: {len(items)} –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
            else:
                print(f"   ‚ö™ {cat_name}: –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –≤—ã–±–æ—Ä–∫–µ")
        
        print()
        print("=" * 60)
        print("‚úÖ –ó–ê–ì–†–£–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("–í—Å–µ 384 –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
        print("=" * 60)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")

if __name__ == "__main__":
    check_materials() 