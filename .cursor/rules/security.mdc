---
description: 
globs: 
alwaysApply: true
---
# Security Rules

## Конфигурация безопасности
- .env файлы для каждой среды
- Ротация паролей и ключей БД

## ❌ КАТЕГОРИЧЕСКИЙ ЗАПРЕТ HARDCODED ЗНАЧЕНИЙ
**КРИТИЧЕСКОЕ ПРАВИЛО БЕЗОПАСНОСТИ**: Полный запрет hardcoded конфигурационных значений в коде

### Обязательные требования:
- **ВСЕ настройки** должны читаться из переменных окружения
- **ОБЯЗАТЕЛЬНОЕ** использование констант вместо магических чисел  
- **СТРОГАЯ** валидация всех env переменных через Pydantic
- **ЦЕНТРАЛИЗАЦИЯ** конфигурации в core/config модулях

### Нарушения = КРИТИЧЕСКАЯ ОШИБКА:
- Hardcoded URL, порты, таймауты в коде
- Магические числа без соответствующих констант
- Конфигурации напрямую в бизнес-логике
- Пароли/ключи в исходном коде
- Database credentials в строках подключения

### Допустимые исключения:
- Только технические константы (размеры буферов, лимиты алгоритмов)
- HTTP статус коды (200, 404, 500)
- Стандартные порты протоколов (80, 443, 22)

### Правильные примеры:
```python
# ✅ ПРАВИЛЬНО: Через переменные окружения
timeout = settings.DATABASE_TIMEOUT
port = settings.SSH_TUNNEL_LOCAL_PORT

# ✅ ПРАВИЛЬНО: Константы в core/config/constants.py
from core.config.constants import DefaultTimeouts
timeout = DefaultTimeouts.DATABASE

# ❌ НЕПРАВИЛЬНО: Hardcoded значения
timeout = 30  
port = 5432
```

## Защита от атак
- Валидация входящих данных (защита от инъекций)
- Ограничение размера запросов и файлов (защита от атак)
