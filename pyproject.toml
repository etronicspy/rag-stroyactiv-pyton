[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "rag-stroyactiv-pyton"
version = "0.1.0"
description = "RAG system for construction materials with vector search and PostgreSQL"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["rag", "vector-search", "construction", "materials", "fastapi", "qdrant"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.25.0",
    "pydantic>=2.6.1",
    "pydantic-settings>=2.1.0",
    "python-multipart>=0.0.7",
    "python-dotenv>=1.0.0",
    "openai>=1.84.0",
    "qdrant-client>=1.7.0",
    "pandas>=2.2.0",
    "openpyxl>=3.1.2",
    "sqlalchemy>=2.0.25",
    "asyncpg>=0.29.0",
    "alembic>=1.13.1",
    "psycopg2-binary>=2.9.9",
    "greenlet>=3.0.1",
    "redis>=5.0.1",
    "aioredis>=2.0.1",
    "httpx>=0.27.0",
    "aiohttp>=3.9.5",
    "paramiko>=3.4.0",
    "pexpect>=4.9.0",
    "sshtunnel>=0.4.0",
    "msgpack>=1.0.7",
    "psutil>=5.9.8",
    "brotli>=1.1.0",
    "colorama>=0.4.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.5",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
]
analysis = [
    "ipython>=8.20.0",
    "jupyter>=1.0.0",
    "memory-profiler>=0.61.0",
    "line-profiler>=4.1.0",
]
database = [
    "pgcli>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/rag-stroyactiv-pyton"
Repository = "https://github.com/yourusername/rag-stroyactiv-pyton"
Documentation = "https://github.com/yourusername/rag-stroyactiv-pyton/docs"
Changelog = "https://github.com/yourusername/rag-stroyactiv-pyton/blob/main/CHANGELOG.md"

[project.scripts]
rag-server = "main:app"

# ========================================
# PYTEST CONFIGURATION
# ========================================
[tool.pytest.ini_options]
pythonpath = "."
asyncio_mode = "auto"
console_output_style = "progress"
addopts = [
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "-ra",
    "--maxfail=10",
    "--durations=10",
    "--color=yes",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning:pydantic",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "database: marks tests that require database",
    "redis: marks tests that require Redis",
    "vector: marks tests that require vector database",
]

# ========================================
# BLACK CODE FORMATTING
# ========================================
[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | alembic/versions
  )/
)
'''

# ========================================
# ISORT IMPORT SORTING
# ========================================
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["alembic/versions/*.py"]

# ========================================
# MYPY TYPE CHECKING
# ========================================
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
strict = true

[[tool.mypy.overrides]]
module = [
    "qdrant_client.*",
    "openai.*",
    "redis.*",
    "aioredis.*",
    "paramiko.*",
    "sshtunnel.*",
    "psutil.*",
]
ignore_missing_imports = true

# ========================================
# COVERAGE CONFIGURATION
# ========================================
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/alembic/*",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/.env/*",
    "setup.py",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# ========================================
# FLAKE8 LINTING
# ========================================
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503", "E501"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "alembic/versions",
    "build",
    "dist",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]

# ========================================
# RUFF LINTING
# ========================================
[tool.ruff]
line-length = 88
select = ["E", "F", "B", "C4", "I", "UP"]  # pycodestyle, pyflakes, bugbear, comprehensions, isort, pyupgrade
ignore = []
exclude = [".venv", "alembic/versions"]

# Enable automatic formatting on ruff check --fix
[tool.ruff.format]
quote-style = "preserve"
indent-style = "space"
line-length = 88 