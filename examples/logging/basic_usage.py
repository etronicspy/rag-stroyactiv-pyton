#!/usr/bin/env python3
"""
üìö –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:
- –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ª–æ–≥–≥–µ—Ä–∞
- –†–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ correlation ID –¥–ª—è —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∏
- –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –ª–æ–≥–∞—Ö
- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π
"""

import sys
import os
import time

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from core.logging import (
    get_logger,
    CorrelationContext,
    get_correlation_id,
    set_correlation_id
)


def basic_logging_example():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ë–ê–ó–û–í–û–ï –õ–û–ì–ò–†–û–í–ê–ù–ò–ï")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–≥–µ—Ä–∞
    logger = get_logger("basic_example")
    
    # –†–∞–∑–ª–∏—á–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    logger.debug("–≠—Ç–æ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    logger.info("–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    logger.warning("–≠—Ç–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
    logger.error("–≠—Ç–æ –æ—à–∏–±–∫–∞")
    logger.critical("–≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞")
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    logger.info("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ", extra={
        "user_id": 12345,
        "action": "login",
        "timestamp": time.time(),
        "ip_address": "192.168.1.100"
    })
    
    print("‚úÖ –ë–∞–∑–æ–≤–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n")


def correlation_id_example():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è correlation ID"""
    print("üîó CORRELATION ID")
    print("=" * 50)
    
    logger = get_logger("correlation_example")
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ correlation ID
    with CorrelationContext.with_correlation_id():
        current_id = get_correlation_id()
        logger.info(f"–ù–∞—á–∞–ª–æ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å correlation ID: {current_id}")
        
        # –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
        logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", extra={
            "step": 1,
            "operation": "validate_input"
        })
        
        logger.info("–ó–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö", extra={
            "step": 2,
            "operation": "fetch_user_data"
        })
        
        logger.info("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞", extra={
            "step": 3,
            "operation": "build_response"
        })
        
        logger.info(f"–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å correlation ID: {current_id}")
    
    # –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ correlation ID
    set_correlation_id("custom-request-12345")
    logger.info("–õ–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º correlation ID")
    
    print("‚úÖ Correlation ID –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n")


def exception_logging_example():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏–π"""
    print("üö® –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ò–°–ö–õ–Æ–ß–ï–ù–ò–ô")
    print("=" * 50)
    
    logger = get_logger("exception_example")
    
    # –ü—Ä–∏–º–µ—Ä 1: –ü–µ—Ä–µ—Ö–≤–∞—Ç –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
    try:
        # –ò–º–∏—Ç–∞—Ü–∏—è –æ—à–∏–±–∫–∏
        result = 10 / 0
    except ZeroDivisionError as e:
        logger.exception("–û—à–∏–±–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å", extra={
            "operation": "division",
            "dividend": 10,
            "divisor": 0,
            "error_type": type(e).__name__
        })
    
    # –ü—Ä–∏–º–µ—Ä 2: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
    try:
        user_data = {"name": "John", "age": "invalid_age"}
        age = int(user_data["age"])
    except ValueError as e:
        logger.error("–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", extra={
            "error": str(e),
            "user_data": user_data,
            "field": "age",
            "expected_type": "int",
            "actual_value": user_data["age"]
        })
    
    # –ü—Ä–∏–º–µ—Ä 3: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –¥–µ—Ç–∞–ª—è–º–∏
    try:
        # –ò–º–∏—Ç–∞—Ü–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ —Å–∏—Å—Ç–µ–º—ã
        raise RuntimeError("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–∞–º—è—Ç–∏")
    except RuntimeError as e:
        logger.critical("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–∏—Å—Ç–µ–º—ã", extra={
            "error_message": str(e),
            "system_state": "degraded",
            "recovery_action": "restart_required",
            "alert_level": "high"
        })
    
    print("‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n")


def structured_data_example():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    print("üìä –°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï")
    print("=" * 50)
    
    logger = get_logger("structured_example")
    
    # –ü—Ä–∏–º–µ—Ä 1: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–∑–Ω–µ—Å-—Å–æ–±—ã—Ç–∏–π
    with CorrelationContext.with_correlation_id():
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞", extra={
            "event_type": "order_created",
            "order_id": "ORD-2024-001",
            "customer_id": 12345,
            "total_amount": 299.99,
            "currency": "USD",
            "items_count": 3,
            "payment_method": "credit_card",
            "shipping_address": {
                "city": "Moscow",
                "country": "Russia",
                "postal_code": "101000"
            }
        })
        
        # –ò–º–∏—Ç–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞
        time.sleep(0.1)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ—Å—Ç–∏
        
        logger.info("–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–ª–∞—Ç–µ–∂–∞", extra={
            "event_type": "payment_processing",
            "order_id": "ORD-2024-001",
            "payment_status": "pending",
            "payment_gateway": "stripe",
            "amount": 299.99
        })
        
        # –£—Å–ø–µ—à–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
        logger.info("–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω", extra={
            "event_type": "order_completed",
            "order_id": "ORD-2024-001",
            "processing_time_ms": 150,
            "status": "completed",
            "next_step": "shipping"
        })
    
    # –ü—Ä–∏–º–µ—Ä 2: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    start_time = time.time()
    
    # –ò–º–∏—Ç–∞—Ü–∏—è –¥–æ–ª–≥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
    time.sleep(0.2)
    
    duration = (time.time() - start_time) * 1000  # –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    
    logger.info("–û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞", extra={
        "event_type": "performance_metric",
        "operation": "data_processing",
        "duration_ms": round(duration, 2),
        "records_processed": 1000,
        "success_rate": 99.5,
        "performance_grade": "excellent" if duration < 100 else "good"
    })
    
    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã\n")


def multiple_logger_example():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ª–æ–≥–≥–µ—Ä–æ–≤"""
    print("üîß –ù–ï–°–ö–û–õ–¨–ö–û –õ–û–ì–ì–ï–†–û–í")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ª–æ–≥–≥–µ—Ä–æ–≤ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    auth_logger = get_logger("auth_service")
    db_logger = get_logger("database")
    api_logger = get_logger("api_handler")
    
    with CorrelationContext.with_correlation_id():
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
        api_logger.info("–ü–æ–ª—É—á–µ–Ω HTTP –∑–∞–ø—Ä–æ—Å", extra={
            "method": "POST",
            "endpoint": "/api/v1/login",
            "client_ip": "192.168.1.100"
        })
        
        auth_logger.info("–ù–∞—á–∞–ª–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏", extra={
            "username": "john_doe",
            "auth_method": "password"
        })
        
        db_logger.info("–ó–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö", extra={
            "query_type": "SELECT",
            "table": "users",
            "duration_ms": 25.5
        })
        
        auth_logger.info("–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞", extra={
            "user_id": 12345,
            "role": "user",
            "session_id": "sess_abc123"
        })
        
        api_logger.info("HTTP –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω", extra={
            "status_code": 200,
            "response_time_ms": 150,
            "content_type": "application/json"
        })
    
    print("‚úÖ –ù–µ—Å–∫–æ–ª—å–∫–æ –ª–æ–≥–≥–µ—Ä–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ\n")


def configuration_example():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"""
    print("‚öôÔ∏è –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø")
    print("=" * 50)
    
    from core.config.logging import LoggingConfig
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config = LoggingConfig()
    
    logger = get_logger("config_example")
    
    logger.info("–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è", extra={
        "log_level": config.LOG_LEVEL,
        "structured_logging": config.ENABLE_STRUCTURED_LOGGING,
        "correlation_id": config.LOG_CORRELATION_ID,
        "database_operations": config.LOG_DATABASE_OPERATIONS,
        "performance_metrics": config.LOG_PERFORMANCE_METRICS,
        "colors_enabled": config.LOG_COLORS
    })
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if config.LOG_CORRELATION_ID:
        logger.info("‚úÖ Correlation ID –≤–∫–ª—é—á–µ–Ω")
    else:
        logger.info("‚ùå Correlation ID –æ—Ç–∫–ª—é—á–µ–Ω")
    
    if config.ENABLE_STRUCTURED_LOGGING:
        logger.info("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ (JSON —Ñ–æ—Ä–º–∞—Ç)")
    else:
        logger.info("‚úÖ –û–±—ã—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ (—Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)")
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞\n")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤"""
    print("üéØ –ü–†–ò–ú–ï–†–´ –ë–ê–ó–û–í–û–ì–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –°–ò–°–¢–ï–ú–´ –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 70)
    print("–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –º–æ–¥—É–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è\n")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    import os
    log_level = os.environ.get('LOG_LEVEL', 'INFO')
    print(f"üìä –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {log_level}")
    print(f"üìä Structured logging: {os.environ.get('ENABLE_STRUCTURED_LOGGING', 'false')}")
    print(f"üìä Correlation ID: {os.environ.get('LOG_CORRELATION_ID', 'false')}")
    print()
    
    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
    try:
        basic_logging_example()
        correlation_id_example()
        exception_logging_example()
        structured_data_example()
        multiple_logger_example()
        configuration_example()
        
        print("üéâ –í–°–ï –ü–†–ò–ú–ï–†–´ –£–°–ü–ï–®–ù–û –í–´–ü–û–õ–ù–ï–ù–´!")
        print("=" * 70)
        print("–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ò–∑—É—á–∏—Ç–µ advanced_features.py –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π")
        print("2. –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ api_integration.py –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å FastAPI")
        print("3. –ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –≤ docs/LOGGING_SYSTEM_GUIDE.md")
        
    except Exception as e:
        error_logger = get_logger("example_error")
        error_logger.exception("–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞", extra={
            "error_type": type(e).__name__,
            "error_message": str(e)
        })
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–∏–º–µ—Ä–∞: {e}")
        return 1
    
    return 0


if __name__ == "__main__":
    exit(main()) 